
./test:     formato del file elf64-x86-64


Disassemblamento della sezione .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassemblamento della sezione .plt:

0000000000001020 <.plt>:
    1020:	ff 35 6a 2f 00 00    	pushq  0x2f6a(%rip)        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 6b 2f 00 00 	bnd jmpq *0x2f6b(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop

Disassemblamento della sezione .plt.got:

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 4d 2f 00 00 	bnd jmpq *0x2f4d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassemblamento della sezione .plt.sec:

00000000000010b0 <free@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 e5 2e 00 00 	bnd jmpq *0x2ee5(%rip)        # 3fa0 <free@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <puts@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 dd 2e 00 00 	bnd jmpq *0x2edd(%rip)        # 3fa8 <puts@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <strlen@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 d5 2e 00 00 	bnd jmpq *0x2ed5(%rip)        # 3fb0 <strlen@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <printf@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 cd 2e 00 00 	bnd jmpq *0x2ecd(%rip)        # 3fb8 <printf@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <memcmp@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 c5 2e 00 00 	bnd jmpq *0x2ec5(%rip)        # 3fc0 <memcmp@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <fgets@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 bd 2e 00 00 	bnd jmpq *0x2ebd(%rip)        # 3fc8 <fgets@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <malloc@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 b5 2e 00 00 	bnd jmpq *0x2eb5(%rip)        # 3fd0 <malloc@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassemblamento della sezione .text:

0000000000001120 <_start>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	31 ed                	xor    %ebp,%ebp
    1126:	49 89 d1             	mov    %rdx,%r9
    1129:	5e                   	pop    %rsi
    112a:	48 89 e2             	mov    %rsp,%rdx
    112d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1131:	50                   	push   %rax
    1132:	54                   	push   %rsp
    1133:	4c 8d 05 96 02 00 00 	lea    0x296(%rip),%r8        # 13d0 <__libc_csu_fini>
    113a:	48 8d 0d 1f 02 00 00 	lea    0x21f(%rip),%rcx        # 1360 <__libc_csu_init>
    1141:	48 8d 3d 8d 01 00 00 	lea    0x18d(%rip),%rdi        # 12d5 <main>
    1148:	ff 15 92 2e 00 00    	callq  *0x2e92(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    114e:	f4                   	hlt    
    114f:	90                   	nop

0000000000001150 <deregister_tm_clones>:
    1150:	48 8d 3d b9 2e 00 00 	lea    0x2eb9(%rip),%rdi        # 4010 <stdin@@GLIBC_2.2.5>
    1157:	48 8d 05 b2 2e 00 00 	lea    0x2eb2(%rip),%rax        # 4010 <stdin@@GLIBC_2.2.5>
    115e:	48 39 f8             	cmp    %rdi,%rax
    1161:	74 15                	je     1178 <deregister_tm_clones+0x28>
    1163:	48 8b 05 6e 2e 00 00 	mov    0x2e6e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    116a:	48 85 c0             	test   %rax,%rax
    116d:	74 09                	je     1178 <deregister_tm_clones+0x28>
    116f:	ff e0                	jmpq   *%rax
    1171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <register_tm_clones>:
    1180:	48 8d 3d 89 2e 00 00 	lea    0x2e89(%rip),%rdi        # 4010 <stdin@@GLIBC_2.2.5>
    1187:	48 8d 35 82 2e 00 00 	lea    0x2e82(%rip),%rsi        # 4010 <stdin@@GLIBC_2.2.5>
    118e:	48 29 fe             	sub    %rdi,%rsi
    1191:	48 89 f0             	mov    %rsi,%rax
    1194:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1198:	48 c1 f8 03          	sar    $0x3,%rax
    119c:	48 01 c6             	add    %rax,%rsi
    119f:	48 d1 fe             	sar    %rsi
    11a2:	74 14                	je     11b8 <register_tm_clones+0x38>
    11a4:	48 8b 05 45 2e 00 00 	mov    0x2e45(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    11ab:	48 85 c0             	test   %rax,%rax
    11ae:	74 08                	je     11b8 <register_tm_clones+0x38>
    11b0:	ff e0                	jmpq   *%rax
    11b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11b8:	c3                   	retq   
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <__do_global_dtors_aux>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	80 3d 4d 2e 00 00 00 	cmpb   $0x0,0x2e4d(%rip)        # 4018 <completed.8060>
    11cb:	75 2b                	jne    11f8 <__do_global_dtors_aux+0x38>
    11cd:	55                   	push   %rbp
    11ce:	48 83 3d 22 2e 00 00 	cmpq   $0x0,0x2e22(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11d5:	00 
    11d6:	48 89 e5             	mov    %rsp,%rbp
    11d9:	74 0c                	je     11e7 <__do_global_dtors_aux+0x27>
    11db:	48 8b 3d 26 2e 00 00 	mov    0x2e26(%rip),%rdi        # 4008 <__dso_handle>
    11e2:	e8 b9 fe ff ff       	callq  10a0 <__cxa_finalize@plt>
    11e7:	e8 64 ff ff ff       	callq  1150 <deregister_tm_clones>
    11ec:	c6 05 25 2e 00 00 01 	movb   $0x1,0x2e25(%rip)        # 4018 <completed.8060>
    11f3:	5d                   	pop    %rbp
    11f4:	c3                   	retq   
    11f5:	0f 1f 00             	nopl   (%rax)
    11f8:	c3                   	retq   
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001200 <frame_dummy>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	e9 77 ff ff ff       	jmpq   1180 <register_tm_clones>

0000000000001209 <foo>:
    1209:	f3 0f 1e fa          	endbr64 
    120d:	55                   	push   %rbp
    120e:	48 89 e5             	mov    %rsp,%rbp
    1211:	48 83 ec 30          	sub    $0x30,%rsp
    1215:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1219:	48 8d 05 e4 0d 00 00 	lea    0xde4(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    1220:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1224:	48 8d 05 de 0d 00 00 	lea    0xdde(%rip),%rax        # 2009 <_IO_stdin_used+0x9>
    122b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    122f:	48 8d 05 d8 0d 00 00 	lea    0xdd8(%rip),%rax        # 200e <_IO_stdin_used+0xe>
    1236:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    123a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    123e:	48 89 c7             	mov    %rax,%rdi
    1241:	e8 8a fe ff ff       	callq  10d0 <strlen@plt>
    1246:	48 89 c2             	mov    %rax,%rdx
    1249:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    124d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1251:	48 89 ce             	mov    %rcx,%rsi
    1254:	48 89 c7             	mov    %rax,%rdi
    1257:	e8 94 fe ff ff       	callq  10f0 <memcmp@plt>
    125c:	85 c0                	test   %eax,%eax
    125e:	75 13                	jne    1273 <foo+0x6a>
    1260:	48 8d 3d aa 0d 00 00 	lea    0xdaa(%rip),%rdi        # 2011 <_IO_stdin_used+0x11>
    1267:	e8 54 fe ff ff       	callq  10c0 <puts@plt>
    126c:	b8 00 00 00 00       	mov    $0x0,%eax
    1271:	eb 60                	jmp    12d3 <foo+0xca>
    1273:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1277:	48 89 c7             	mov    %rax,%rdi
    127a:	e8 51 fe ff ff       	callq  10d0 <strlen@plt>
    127f:	48 89 c2             	mov    %rax,%rdx
    1282:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    1286:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    128a:	48 89 ce             	mov    %rcx,%rsi
    128d:	48 89 c7             	mov    %rax,%rdi
    1290:	e8 5b fe ff ff       	callq  10f0 <memcmp@plt>
    1295:	85 c0                	test   %eax,%eax
    1297:	75 13                	jne    12ac <foo+0xa3>
    1299:	48 8d 3d 82 0d 00 00 	lea    0xd82(%rip),%rdi        # 2022 <_IO_stdin_used+0x22>
    12a0:	e8 1b fe ff ff       	callq  10c0 <puts@plt>
    12a5:	b8 01 00 00 00       	mov    $0x1,%eax
    12aa:	eb 27                	jmp    12d3 <foo+0xca>
    12ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12b0:	8b 00                	mov    (%rax),%eax
    12b2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    12b5:	83 7d e4 0a          	cmpl   $0xa,-0x1c(%rbp)
    12b9:	75 13                	jne    12ce <foo+0xc5>
    12bb:	48 8d 3d 6c 0d 00 00 	lea    0xd6c(%rip),%rdi        # 202e <_IO_stdin_used+0x2e>
    12c2:	e8 f9 fd ff ff       	callq  10c0 <puts@plt>
    12c7:	b8 0a 00 00 00       	mov    $0xa,%eax
    12cc:	eb 05                	jmp    12d3 <foo+0xca>
    12ce:	b8 b5 f6 95 49       	mov    $0x4995f6b5,%eax
    12d3:	c9                   	leaveq 
    12d4:	c3                   	retq   

00000000000012d5 <main>:
    12d5:	f3 0f 1e fa          	endbr64 
    12d9:	55                   	push   %rbp
    12da:	48 89 e5             	mov    %rsp,%rbp
    12dd:	48 83 ec 10          	sub    $0x10,%rsp
    12e1:	bf 0a 00 00 00       	mov    $0xa,%edi
    12e6:	e8 25 fe ff ff       	callq  1110 <malloc@plt>
    12eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    12ef:	48 8b 15 1a 2d 00 00 	mov    0x2d1a(%rip),%rdx        # 4010 <stdin@@GLIBC_2.2.5>
    12f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    12fa:	be 0a 00 00 00       	mov    $0xa,%esi
    12ff:	48 89 c7             	mov    %rax,%rdi
    1302:	e8 f9 fd ff ff       	callq  1100 <fgets@plt>
    1307:	48 85 c0             	test   %rax,%rax
    130a:	75 13                	jne    131f <main+0x4a>
    130c:	48 8d 3d 2b 0d 00 00 	lea    0xd2b(%rip),%rdi        # 203e <_IO_stdin_used+0x3e>
    1313:	e8 a8 fd ff ff       	callq  10c0 <puts@plt>
    1318:	b8 01 00 00 00       	mov    $0x1,%eax
    131d:	eb 30                	jmp    134f <main+0x7a>
    131f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1323:	48 89 c7             	mov    %rax,%rdi
    1326:	e8 de fe ff ff       	callq  1209 <foo>
    132b:	89 c6                	mov    %eax,%esi
    132d:	48 8d 3d 1d 0d 00 00 	lea    0xd1d(%rip),%rdi        # 2051 <_IO_stdin_used+0x51>
    1334:	b8 00 00 00 00       	mov    $0x0,%eax
    1339:	e8 a2 fd ff ff       	callq  10e0 <printf@plt>
    133e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1342:	48 89 c7             	mov    %rax,%rdi
    1345:	e8 66 fd ff ff       	callq  10b0 <free@plt>
    134a:	b8 00 00 00 00       	mov    $0x0,%eax
    134f:	c9                   	leaveq 
    1350:	c3                   	retq   
    1351:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1358:	00 00 00 
    135b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001360 <__libc_csu_init>:
    1360:	f3 0f 1e fa          	endbr64 
    1364:	41 57                	push   %r15
    1366:	4c 8d 3d 1b 2a 00 00 	lea    0x2a1b(%rip),%r15        # 3d88 <__frame_dummy_init_array_entry>
    136d:	41 56                	push   %r14
    136f:	49 89 d6             	mov    %rdx,%r14
    1372:	41 55                	push   %r13
    1374:	49 89 f5             	mov    %rsi,%r13
    1377:	41 54                	push   %r12
    1379:	41 89 fc             	mov    %edi,%r12d
    137c:	55                   	push   %rbp
    137d:	48 8d 2d 0c 2a 00 00 	lea    0x2a0c(%rip),%rbp        # 3d90 <__do_global_dtors_aux_fini_array_entry>
    1384:	53                   	push   %rbx
    1385:	4c 29 fd             	sub    %r15,%rbp
    1388:	48 83 ec 08          	sub    $0x8,%rsp
    138c:	e8 6f fc ff ff       	callq  1000 <_init>
    1391:	48 c1 fd 03          	sar    $0x3,%rbp
    1395:	74 1f                	je     13b6 <__libc_csu_init+0x56>
    1397:	31 db                	xor    %ebx,%ebx
    1399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13a0:	4c 89 f2             	mov    %r14,%rdx
    13a3:	4c 89 ee             	mov    %r13,%rsi
    13a6:	44 89 e7             	mov    %r12d,%edi
    13a9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    13ad:	48 83 c3 01          	add    $0x1,%rbx
    13b1:	48 39 dd             	cmp    %rbx,%rbp
    13b4:	75 ea                	jne    13a0 <__libc_csu_init+0x40>
    13b6:	48 83 c4 08          	add    $0x8,%rsp
    13ba:	5b                   	pop    %rbx
    13bb:	5d                   	pop    %rbp
    13bc:	41 5c                	pop    %r12
    13be:	41 5d                	pop    %r13
    13c0:	41 5e                	pop    %r14
    13c2:	41 5f                	pop    %r15
    13c4:	c3                   	retq   
    13c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    13cc:	00 00 00 00 

00000000000013d0 <__libc_csu_fini>:
    13d0:	f3 0f 1e fa          	endbr64 
    13d4:	c3                   	retq   

Disassemblamento della sezione .fini:

00000000000013d8 <_fini>:
    13d8:	f3 0f 1e fa          	endbr64 
    13dc:	48 83 ec 08          	sub    $0x8,%rsp
    13e0:	48 83 c4 08          	add    $0x8,%rsp
    13e4:	c3                   	retq   
